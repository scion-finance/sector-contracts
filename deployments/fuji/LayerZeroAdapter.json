{
  "address": "0xcC885E7CD62609CEb6403242b9310a70FDD01bF1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_layerZeroEndpoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_guardian",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InsufficientBalanceToSendMessage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MessageExpired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "fromAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "destAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "srcAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "messageType",
          "type": "uint16"
        }
      ],
      "name": "MessageReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pendingOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GUARDIAN",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MANAGER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endpoint",
      "outputs": [
        {
          "internalType": "contract ILayerZeroEndpoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_srcAddress",
          "type": "bytes"
        }
      ],
      "name": "forceResumeReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_chainId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReceiveVersion",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSendVersion",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_srcChainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "_fromAddress",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "lzReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "senderVaultAddress",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "senderChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "readMessage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_dstVautAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_srcVautAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_dstChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "_messageType",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_srcChainId",
          "type": "uint256"
        }
      ],
      "name": "sendMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_adapter",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_lzChainId",
          "type": "uint16"
        }
      ],
      "name": "setChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "_configType",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_config",
          "type": "bytes"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "version",
          "type": "uint16"
        }
      ],
      "name": "setReceiveVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "version",
          "type": "uint16"
        }
      ],
      "name": "setSendVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pendingOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xcfcd55ef5bdd3885c3c7bd9144675e4a216f25d6feaf2ae8848b853d0950eb9b",
  "receipt": {
    "to": null,
    "from": "0xACDB303129dD772DCd717bf75b8667A06C00089A",
    "contractAddress": "0xcC885E7CD62609CEb6403242b9310a70FDD01bF1",
    "transactionIndex": 0,
    "gasUsed": "1626343",
    "logsBloom": "0x
    "blockHash": "0x93721279bd3ee3beed322db4c5d2d1fc09631f5e79d3e5ee3263da62b67730c4",
    "transactionHash": "0xcfcd55ef5bdd3885c3c7bd9144675e4a216f25d6feaf2ae8848b853d0950eb9b",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 14368817,
        "transactionHash": "0xcfcd55ef5bdd3885c3c7bd9144675e4a216f25d6feaf2ae8848b853d0950eb9b",
        "address": "0xcC885E7CD62609CEb6403242b9310a70FDD01bF1",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000acdb303129dd772dcd717bf75b8667a06c00089a",
        "logIndex": 0,
        "blockHash": "0x93721279bd3ee3beed322db4c5d2d1fc09631f5e79d3e5ee3263da62b67730c4"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 14368817,
        "transactionHash": "0xcfcd55ef5bdd3885c3c7bd9144675e4a216f25d6feaf2ae8848b853d0950eb9b",
        "address": "0xcC885E7CD62609CEb6403242b9310a70FDD01bF1",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000acdb303129dd772dcd717bf75b8667a06c00089a",
          "0x000000000000000000000000acdb303129dd772dcd717bf75b8667a06c00089a"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x93721279bd3ee3beed322db4c5d2d1fc09631f5e79d3e5ee3263da62b67730c4"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 14368817,
        "transactionHash": "0xcfcd55ef5bdd3885c3c7bd9144675e4a216f25d6feaf2ae8848b853d0950eb9b",
        "address": "0xcC885E7CD62609CEb6403242b9310a70FDD01bF1",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x8b5b16d04624687fcf0d0228f19993c9157c1ed07b41d8d430fd9100eb099fe8",
          "0x000000000000000000000000acdb303129dd772dcd717bf75b8667a06c00089a",
          "0x000000000000000000000000acdb303129dd772dcd717bf75b8667a06c00089a"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x93721279bd3ee3beed322db4c5d2d1fc09631f5e79d3e5ee3263da62b67730c4"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 14368817,
        "transactionHash": "0xcfcd55ef5bdd3885c3c7bd9144675e4a216f25d6feaf2ae8848b853d0950eb9b",
        "address": "0xcC885E7CD62609CEb6403242b9310a70FDD01bF1",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0xaf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02c",
          "0x000000000000000000000000acdb303129dd772dcd717bf75b8667a06c00089a",
          "0x000000000000000000000000acdb303129dd772dcd717bf75b8667a06c00089a"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0x93721279bd3ee3beed322db4c5d2d1fc09631f5e79d3e5ee3263da62b67730c4"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 14368817,
        "transactionHash": "0xcfcd55ef5bdd3885c3c7bd9144675e4a216f25d6feaf2ae8848b853d0950eb9b",
        "address": "0xcC885E7CD62609CEb6403242b9310a70FDD01bF1",
        "topics": [
          "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
          "0xaf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02c",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x8b5b16d04624687fcf0d0228f19993c9157c1ed07b41d8d430fd9100eb099fe8"
        ],
        "data": "0x",
        "logIndex": 4,
        "blockHash": "0x93721279bd3ee3beed322db4c5d2d1fc09631f5e79d3e5ee3263da62b67730c4"
      }
    ],
    "blockNumber": 14368817,
    "cumulativeGasUsed": "1626343",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x93f54D755A063cE7bB9e6Ac47Eccc8e33411d706",
    "0xACDB303129dD772DCd717bf75b8667A06C00089A",
    "0xACDB303129dD772DCd717bf75b8667A06C00089A",
    "0xACDB303129dD772DCd717bf75b8667A06C00089A"
  ],
  "numDeployments": 1,
  "solcInputHash": "e35dc96bd5272bb938dcb5c798de84d2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_layerZeroEndpoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_guardian\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientBalanceToSendMessage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"srcAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"messageType\",\"type\":\"uint16\"}],\"name\":\"MessageReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GUARDIAN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReceiveVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSendVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_fromAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"senderVaultAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"senderChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"readMessage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_dstVautAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_srcVautAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_dstChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"_messageType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_srcChainId\",\"type\":\"uint256\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_adapter\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_lzChainId\",\"type\":\"uint16\"}],\"name\":\"setChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pendingOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"Accept transfer of ownership of the contract. Can only be called by the pendingOwner.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Init transfer of ownership of the contract to a new account (`_pendingOwner`).\",\"params\":{\"_pendingOwner\":\"pending owner of contract Can only be called by the current owner.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"GUARDIAN()\":{\"notice\":\"Update vault params, perform time-sensitive operations, set manager\"},\"MANAGER()\":{\"notice\":\"Hot-wallet bots that route funds between vaults, rebalance and harvest strategies\"},\"owner()\":{\"notice\":\"Add and remove vaults and strategies and other critical operations behind timelock Default admin role There should only be one owner, so it is not a role\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/adapters/LayerZeroAdapter.sol\":\"LayerZeroAdapter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(uint160(account), 20),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"src/adapters/LayerZeroAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.16;\\n\\nimport { ILayerZeroReceiver } from \\\"../interfaces/adapters/ILayerZeroReceiver.sol\\\";\\nimport { ILayerZeroEndpoint } from \\\"../interfaces/adapters/ILayerZeroEndpoint.sol\\\";\\nimport { ILayerZeroUserApplicationConfig } from \\\"../interfaces/adapters/ILayerZeroUserApplicationConfig.sol\\\";\\nimport { XAdapter } from \\\"./XAdapter.sol\\\";\\nimport { Auth } from \\\"../common/Auth.sol\\\";\\n\\ncontract LayerZeroAdapter is ILayerZeroReceiver, ILayerZeroUserApplicationConfig, XAdapter, Auth {\\n\\tILayerZeroEndpoint public endpoint;\\n\\n\\tstruct lzConfig {\\n\\t\\taddress adapter;\\n\\t\\tuint16 lzChainId;\\n\\t}\\n\\n\\tstruct message {\\n\\t\\tuint256 deposits;\\n\\t\\tuint256 withdrawals;\\n\\t\\tuint256 redeemed;\\n\\t}\\n\\n\\tmapping(uint256 => mapping(address => message)) messages;\\n\\n\\tmapping(uint256 => lzConfig) chains;\\n\\n\\tconstructor(\\n\\t\\taddress _layerZeroEndpoint,\\n\\t\\taddress _owner,\\n\\t\\taddress _guardian,\\n\\t\\taddress _manager\\n\\t) Auth(_owner, _guardian, _manager) {\\n\\t\\tendpoint = ILayerZeroEndpoint(_layerZeroEndpoint);\\n\\t}\\n\\n\\tfunction sendMessage(\\n\\t\\tuint256 _amount,\\n\\t\\taddress _dstVautAddress,\\n\\t\\taddress _srcVautAddress,\\n\\t\\tuint256 _dstChainId,\\n\\t\\tuint16 _messageType,\\n\\t\\tuint256 _srcChainId\\n\\t) external override onlyRole(MANAGER) {\\n\\t\\t_srcChainId;\\n\\t\\tif (address(this).balance == 0) revert NoBalance();\\n\\n\\t\\tbytes memory payload = abi.encode(_amount, _srcVautAddress, _dstVautAddress, _messageType);\\n\\n\\t\\t// encode adapterParams to specify more gas for the destination\\n\\t\\tuint16 version = 1;\\n\\t\\tuint256 gasForDestinationLzReceive = 350000;\\n\\t\\tbytes memory adapterParams = abi.encodePacked(version, gasForDestinationLzReceive);\\n\\t\\t(uint256 messageFee, ) = endpoint.estimateFees(\\n\\t\\t\\tuint16(chains[_dstChainId].lzChainId),\\n\\t\\t\\taddress(this),\\n\\t\\t\\tpayload,\\n\\t\\t\\tfalse,\\n\\t\\t\\tadapterParams\\n\\t\\t);\\n\\t\\tif (address(this).balance < messageFee) revert InsufficientBalanceToSendMessage();\\n\\n\\t\\t// send LayerZero message\\n\\t\\tendpoint.send{ value: messageFee }( // {value: messageFee} will be paid out of this contract!\\n\\t\\t\\tuint16(chains[_dstChainId].lzChainId), // destination chainId\\n\\t\\t\\tabi.encodePacked(chains[_dstChainId].adapter), // destination address of Adapter on dst chain\\n\\t\\t\\tpayload, // abi.encode()'ed bytes\\n\\t\\t\\tpayable(this), // (msg.sender will be this contract) refund address (LayerZero will refund any extra gas back to caller of send()\\n\\t\\t\\taddress(0x0), // 'zroPaymentAddress' unused for this mock/example\\n\\t\\t\\tadapterParams // 'adapterParams' unused for this mock/example\\n\\t\\t);\\n\\t}\\n\\n\\tfunction lzReceive(\\n\\t\\tuint16 _srcChainId,\\n\\t\\tbytes memory _fromAddress,\\n\\t\\tuint64, /*_nonce*/\\n\\t\\tbytes memory _payload\\n\\t) external override {\\n\\t\\t// lzReceive can only be called by the LayerZero endpoint\\n\\t\\tif (msg.sender != address(endpoint)) revert Unauthorized();\\n\\n\\t\\t// use assembly to extract the address from the bytes memory parameter\\n\\t\\taddress fromAddress;\\n\\t\\tassembly {\\n\\t\\t\\tfromAddress := mload(add(_fromAddress, 20))\\n\\t\\t}\\n\\n\\t\\t// decode payload sent from source chain\\n\\t\\t(\\n\\t\\t\\tuint256 _amount,\\n\\t\\t\\taddress _srcVaultAddress,\\n\\t\\t\\taddress _dstVaultAddress,\\n\\t\\t\\tuint16 messageType\\n\\t\\t) = abi.decode(_payload, (uint256, address, address, uint16));\\n\\n\\t\\t// TODO: Implement storage logic for differente message types.\\n\\t\\t// deposit has messageType === 1\\n\\t\\t// redeemRequest has messageType === 2\\n\\t\\t// redeem has messageType === 3\\n\\n\\t\\temit MessageReceived(\\n\\t\\t\\t_srcChainId,\\n\\t\\t\\tfromAddress,\\n\\t\\t\\t_srcVaultAddress,\\n\\t\\t\\t_amount,\\n\\t\\t\\t_dstVaultAddress,\\n\\t\\t\\tmessageType\\n\\t\\t);\\n\\t}\\n\\n\\tfunction setChain(\\n\\t\\tuint256 _chainId,\\n\\t\\taddress _adapter,\\n\\t\\tuint16 _lzChainId\\n\\t) external onlyRole(MANAGER) {\\n\\t\\tchains[_chainId].adapter = _adapter;\\n\\t\\tchains[_chainId].lzChainId = _lzChainId;\\n\\t}\\n\\n\\tfunction setConfig(\\n\\t\\tuint16,\\n\\t\\tuint16 _dstChainId,\\n\\t\\tuint256 _configType,\\n\\t\\tbytes memory _config\\n\\t) external override {\\n\\t\\tendpoint.setConfig(\\n\\t\\t\\tchains[_dstChainId].lzChainId,\\n\\t\\t\\tendpoint.getSendVersion(address(this)),\\n\\t\\t\\t_configType,\\n\\t\\t\\t_config\\n\\t\\t);\\n\\t}\\n\\n\\tfunction getConfig(\\n\\t\\tuint16,\\n\\t\\tuint16 _chainId,\\n\\t\\taddress,\\n\\t\\tuint256 _configType\\n\\t) external view returns (bytes memory) {\\n\\t\\treturn\\n\\t\\t\\tendpoint.getConfig(\\n\\t\\t\\t\\tendpoint.getSendVersion(address(this)),\\n\\t\\t\\t\\t_chainId,\\n\\t\\t\\t\\taddress(this),\\n\\t\\t\\t\\t_configType\\n\\t\\t\\t);\\n\\t}\\n\\n\\tfunction setSendVersion(uint16 version) external override {\\n\\t\\tendpoint.setSendVersion(version);\\n\\t}\\n\\n\\tfunction setReceiveVersion(uint16 version) external override {\\n\\t\\tendpoint.setReceiveVersion(version);\\n\\t}\\n\\n\\tfunction getSendVersion() external view returns (uint16) {\\n\\t\\treturn endpoint.getSendVersion(address(this));\\n\\t}\\n\\n\\tfunction getReceiveVersion() external view returns (uint16) {\\n\\t\\treturn endpoint.getReceiveVersion(address(this));\\n\\t}\\n\\n\\tfunction forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override {\\n\\t\\t// do nth\\n\\t}\\n\\n\\t// allow this contract to receive ether\\n\\tfallback() external payable {}\\n\\n\\treceive() external payable {}\\n\\n\\t/* EVENTS */\\n\\tevent MessageReceived(\\n\\t\\tuint16 _srcChainId,\\n\\t\\taddress fromAddress,\\n\\t\\taddress destAddress,\\n\\t\\tuint256 amount,\\n\\t\\taddress srcAddress,\\n\\t\\tuint16 messageType\\n\\t);\\n\\n\\t/* ERRORS */\\n\\terror Unauthorized();\\n\\terror NoBalance();\\n\\terror InsufficientBalanceToSendMessage();\\n}\\n\",\"keccak256\":\"0x978e53d3d3131188c5db367d4003a1ea72c0f14f6ed9f8517d7931c0c39bf60b\",\"license\":\"AGPL-3.0\"},\"src/adapters/XAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.16;\\n\\nabstract contract XAdapter {\\n\\tstruct Message {\\n\\t\\tuint256 value;\\n\\t\\tuint256 timestamp;\\n\\t}\\n\\n\\tmapping(uint16 => mapping(address => Message)) internal messageBoard;\\n\\n\\tfunction sendMessage(\\n\\t\\tuint256 amount,\\n\\t\\taddress dstVautAddress,\\n\\t\\taddress srcVaultAddress,\\n\\t\\tuint256 destChainId,\\n\\t\\tuint16 messageType,\\n\\t\\tuint256 srcChainId\\n\\t) external virtual;\\n\\n\\tfunction readMessage(\\n\\t\\taddress senderVaultAddress,\\n\\t\\tuint16 senderChainId,\\n\\t\\tuint256 timestamp\\n\\t) external view returns (uint256) {\\n\\t\\tMessage memory message = messageBoard[senderChainId][senderVaultAddress];\\n\\n\\t\\tif (message.timestamp < timestamp) revert MessageExpired();\\n\\n\\t\\treturn (message.value);\\n\\t}\\n\\n\\terror MessageExpired();\\n}\\n\",\"keccak256\":\"0x5f8775d1b13ac4de8f236c15470fb36fb54189c18c7cb0fc26e6648067e5e71d\",\"license\":\"AGPL-3.0\"},\"src/common/Auth.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.16;\\n\\nimport { AccessControl } from \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\n\\ncontract Auth is AccessControl {\\n\\tevent OwnershipTransferInitiated(address owner, address pendingOwner);\\n\\tevent OwnershipTransferred(address oldOwner, address newOwner);\\n\\n\\t////////// CONSTANTS //////////\\n\\n\\t/// Update vault params, perform time-sensitive operations, set manager\\n\\tbytes32 public constant GUARDIAN = keccak256(\\\"GUARDIAN\\\");\\n\\n\\t/// Hot-wallet bots that route funds between vaults, rebalance and harvest strategies\\n\\tbytes32 public constant MANAGER = keccak256(\\\"MANAGER\\\");\\n\\n\\t/// Add and remove vaults and strategies and other critical operations behind timelock\\n\\t/// Default admin role\\n\\t/// There should only be one owner, so it is not a role\\n\\taddress public owner;\\n\\taddress public pendingOwner;\\n\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(msg.sender == owner, \\\"ONLY_OWNER\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(\\n\\t\\taddress _owner,\\n\\t\\taddress guardian,\\n\\t\\taddress manager\\n\\t) {\\n\\t\\t/// Set up the roles\\n\\t\\t// owner can manage all roles\\n\\t\\towner = _owner;\\n\\t\\temit OwnershipTransferred(address(0), owner);\\n\\n\\t\\t// TODO do we want cascading roles like this?\\n\\t\\t_grantRole(DEFAULT_ADMIN_ROLE, owner);\\n\\t\\t_grantRole(GUARDIAN, owner);\\n\\t\\t_grantRole(GUARDIAN, guardian);\\n\\t\\t_grantRole(MANAGER, owner);\\n\\t\\t_grantRole(MANAGER, guardian);\\n\\t\\t_grantRole(MANAGER, manager);\\n\\n\\t\\t/// Allow the guardian role to manage manager\\n\\t\\t_setRoleAdmin(MANAGER, GUARDIAN);\\n\\t}\\n\\n\\t// ----------- Ownership -----------\\n\\n\\t/// @dev Init transfer of ownership of the contract to a new account (`_pendingOwner`).\\n\\t/// @param _pendingOwner pending owner of contract\\n\\t/// Can only be called by the current owner.\\n\\tfunction transferOwnership(address _pendingOwner) external onlyOwner {\\n\\t\\tpendingOwner = _pendingOwner;\\n\\t\\temit OwnershipTransferInitiated(owner, pendingOwner);\\n\\t}\\n\\n\\t/// @dev Accept transfer of ownership of the contract.\\n\\t/// Can only be called by the pendingOwner.\\n\\tfunction acceptOwnership() external {\\n\\t\\trequire(msg.sender == pendingOwner, \\\"ONLY_PENDING_OWNER\\\");\\n\\t\\taddress oldOwner = owner;\\n\\t\\towner = pendingOwner;\\n\\n\\t\\t// revoke the DEFAULT ADMIN ROLE from prev owner\\n\\t\\t_revokeRole(DEFAULT_ADMIN_ROLE, oldOwner);\\n\\t\\t_revokeRole(GUARDIAN, oldOwner);\\n\\t\\t_revokeRole(MANAGER, oldOwner);\\n\\n\\t\\t_grantRole(DEFAULT_ADMIN_ROLE, owner);\\n\\t\\t_grantRole(GUARDIAN, owner);\\n\\t\\t_grantRole(MANAGER, owner);\\n\\n\\t\\temit OwnershipTransferred(oldOwner, owner);\\n\\t}\\n}\\n\",\"keccak256\":\"0xfcf278e615e7d5df63da865946f01d62c6f4e7ba468157d59cf1b8766d60c426\",\"license\":\"MIT\"},\"src/interfaces/adapters/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.5.0;\\n\\nimport { ILayerZeroUserApplicationConfig } from \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n\\t// @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n\\t// @param _dstChainId - the destination chain identifier\\n\\t// @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n\\t// @param _payload - a custom bytes payload to send to the destination contract\\n\\t// @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n\\t// @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n\\t// @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n\\tfunction send(\\n\\t\\tuint16 _dstChainId,\\n\\t\\tbytes calldata _destination,\\n\\t\\tbytes calldata _payload,\\n\\t\\taddress payable _refundAddress,\\n\\t\\taddress _zroPaymentAddress,\\n\\t\\tbytes calldata _adapterParams\\n\\t) external payable;\\n\\n\\t// @notice used by the messaging library to publish verified payload\\n\\t// @param _srcChainId - the source chain identifier\\n\\t// @param _srcAddress - the source contract (as bytes) at the source chain\\n\\t// @param _dstAddress - the address on destination chain\\n\\t// @param _nonce - the unbound message ordering nonce\\n\\t// @param _gasLimit - the gas limit for external contract execution\\n\\t// @param _payload - verified payload to send to the destination contract\\n\\tfunction receivePayload(\\n\\t\\tuint16 _srcChainId,\\n\\t\\tbytes calldata _srcAddress,\\n\\t\\taddress _dstAddress,\\n\\t\\tuint64 _nonce,\\n\\t\\tuint256 _gasLimit,\\n\\t\\tbytes calldata _payload\\n\\t) external;\\n\\n\\t// @notice get the inboundNonce of a receiver from a source chain which could be EVM or non-EVM chain\\n\\t// @param _srcChainId - the source chain identifier\\n\\t// @param _srcAddress - the source chain contract address\\n\\tfunction getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (uint64);\\n\\n\\t// @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n\\t// @param _srcAddress - the source chain contract address\\n\\tfunction getOutboundNonce(uint16 _dstChainId, address _srcAddress)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (uint64);\\n\\n\\t// @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n\\t// @param _dstChainId - the destination chain identifier\\n\\t// @param _userApplication - the user app address on this EVM chain\\n\\t// @param _payload - the custom message to send over LayerZero\\n\\t// @param _payInZRO - if false, user app pays the protocol fee in native token\\n\\t// @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n\\tfunction estimateFees(\\n\\t\\tuint16 _dstChainId,\\n\\t\\taddress _userApplication,\\n\\t\\tbytes calldata _payload,\\n\\t\\tbool _payInZRO,\\n\\t\\tbytes calldata _adapterParam\\n\\t) external view returns (uint256 nativeFee, uint256 zroFee);\\n\\n\\t// @notice get this Endpoint's immutable source identifier\\n\\tfunction getChainId() external view returns (uint16);\\n\\n\\t// @notice the interface to retry failed message on this Endpoint destination\\n\\t// @param _srcChainId - the source chain identifier\\n\\t// @param _srcAddress - the source chain contract address\\n\\t// @param _payload - the payload to be retried\\n\\tfunction retryPayload(\\n\\t\\tuint16 _srcChainId,\\n\\t\\tbytes calldata _srcAddress,\\n\\t\\tbytes calldata _payload\\n\\t) external;\\n\\n\\t// @notice query if any STORED payload (message blocking) at the endpoint.\\n\\t// @param _srcChainId - the source chain identifier\\n\\t// @param _srcAddress - the source chain contract address\\n\\tfunction hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (bool);\\n\\n\\t// @notice query if the _libraryAddress is valid for sending msgs.\\n\\t// @param _userApplication - the user app address on this EVM chain\\n\\tfunction getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n\\t// @notice query if the _libraryAddress is valid for receiving msgs.\\n\\t// @param _userApplication - the user app address on this EVM chain\\n\\tfunction getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n\\t// @notice query if the non-reentrancy guard for send() is on\\n\\t// @return true if the guard is on. false otherwise\\n\\tfunction isSendingPayload() external view returns (bool);\\n\\n\\t// @notice query if the non-reentrancy guard for receive() is on\\n\\t// @return true if the guard is on. false otherwise\\n\\tfunction isReceivingPayload() external view returns (bool);\\n\\n\\t// @notice get the configuration of the LayerZero messaging library of the specified version\\n\\t// @param _version - messaging library version\\n\\t// @param _chainId - the chainId for the pending config change\\n\\t// @param _userApplication - the contract address of the user application\\n\\t// @param _configType - type of configuration. every messaging library has its own convention.\\n\\tfunction getConfig(\\n\\t\\tuint16 _version,\\n\\t\\tuint16 _chainId,\\n\\t\\taddress _userApplication,\\n\\t\\tuint256 _configType\\n\\t) external view returns (bytes memory);\\n\\n\\t// @notice get the send() LayerZero messaging library version\\n\\t// @param _userApplication - the contract address of the user application\\n\\tfunction getSendVersion(address _userApplication) external view returns (uint16);\\n\\n\\t// @notice get the lzReceive() LayerZero messaging library version\\n\\t// @param _userApplication - the contract address of the user application\\n\\tfunction getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0x8150e6149b95c144393777d543666819a927e560640c8f44dffbe689c2300b16\",\"license\":\"BUSL-1.1\"},\"src/interfaces/adapters/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n\\t// @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n\\t// @param _srcChainId - the source endpoint identifier\\n\\t// @param _srcAddress - the source sending contract address from the source chain\\n\\t// @param _nonce - the ordered message nonce\\n\\t// @param _payload - the signed payload is the UA bytes has encoded to be sent\\n\\tfunction lzReceive(\\n\\t\\tuint16 _srcChainId,\\n\\t\\tbytes calldata _srcAddress,\\n\\t\\tuint64 _nonce,\\n\\t\\tbytes calldata _payload\\n\\t) external;\\n}\\n\",\"keccak256\":\"0xe5a1cba5611a50ad8805638ebc6f932cc9736568568ee87c238e5f60abc7d4b5\",\"license\":\"BUSL-1.1\"},\"src/interfaces/adapters/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n\\t// @notice set the configuration of the LayerZero messaging library of the specified version\\n\\t// @param _version - messaging library version\\n\\t// @param _chainId - the chainId for the pending config change\\n\\t// @param _configType - type of configuration. every messaging library has its own convention.\\n\\t// @param _config - configuration in the bytes. can encode arbitrary content.\\n\\tfunction setConfig(\\n\\t\\tuint16 _version,\\n\\t\\tuint16 _chainId,\\n\\t\\tuint256 _configType,\\n\\t\\tbytes calldata _config\\n\\t) external;\\n\\n\\t// @notice set the send() LayerZero messaging library version to _version\\n\\t// @param _version - new messaging library version\\n\\tfunction setSendVersion(uint16 _version) external;\\n\\n\\t// @notice set the lzReceive() LayerZero messaging library version to _version\\n\\t// @param _version - new messaging library version\\n\\tfunction setReceiveVersion(uint16 _version) external;\\n\\n\\t// @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n\\t// @param _srcChainId - the chainId of the source chain\\n\\t// @param _srcAddress - the contract address of the source contract at the source chain\\n\\tfunction forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0x2e1a4a538d9f08c94f854b704569215de8797f054a014934a7e75dd92346820c\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001cdb38038062001cdb833981016040819052620000349162000299565b600280546001600160a01b0319166001600160a01b038516908117909155604080516000815260208101929092528491849184917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0910160405180910390a1600254620000ad906000906001600160a01b0316620001a6565b600254620000d59060008051602062001cbb833981519152906001600160a01b0316620001a6565b620000f060008051602062001cbb83398151915283620001a6565b600254620001189060008051602062001c9b833981519152906001600160a01b0316620001a6565b6200013360008051602062001c9b83398151915283620001a6565b6200014e60008051602062001c9b83398151915282620001a6565b6200017860008051602062001c9b83398151915260008051602062001cbb8339815191526200022f565b5050600480546001600160a01b0319166001600160a01b03969096169590951790945550620002f692505050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff166200022b5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45b5050565b6000828152600160208190526040808320909101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b80516001600160a01b03811681146200029457600080fd5b919050565b60008060008060808587031215620002b057600080fd5b620002bb856200027c565b9350620002cb602086016200027c565b9250620002db604086016200027c565b9150620002eb606086016200027c565b905092959194509250565b61199580620003066000396000f3fe6080604052600436106101265760003560e01c80621d35671461012f57806301ffc9a71461014f57806307e0db171461018457806310ddb137146101a45780631b2df850146101c4578063248a9ca3146101f45780632f2ff15d1461021457806336568abe1461023457806342d65a8d1461025457806354a5beda146102745780635c9a59b61461029c5780635e280f11146102bc578063724c184c146102e957806379ba50971461030b5780638da5cb5b1461032057806391d1485414610340578063a217fddf14610360578063bc26def514610375578063cbed8b9c14610395578063cc14d020146103b5578063cf5d1471146103d5578063d547741f146103ea578063e30c39781461040a578063f2fde38b1461042a578063f5ecbdbc1461044a57005b3661012d57005b005b34801561013b57600080fd5b5061012d61014a366004611246565b610477565b34801561015b57600080fd5b5061016f61016a3660046112d5565b610550565b60405190151581526020015b60405180910390f35b34801561019057600080fd5b5061012d61019f3660046112ff565b610587565b3480156101b057600080fd5b5061012d6101bf3660046112ff565b6105ed565b3480156101d057600080fd5b506101e660008051602061192083398151915281565b60405190815260200161017b565b34801561020057600080fd5b506101e661020f36600461131c565b610622565b34801561022057600080fd5b5061012d61022f36600461134a565b610638565b34801561024057600080fd5b5061012d61024f36600461134a565b610654565b34801561026057600080fd5b5061012d61026f36600461137a565b505050565b34801561028057600080fd5b506102896106d7565b60405161ffff909116815260200161017b565b3480156102a857600080fd5b5061012d6102b73660046113fe565b61074f565b3480156102c857600080fd5b506004546102dc906001600160a01b031681565b60405161017b9190611440565b3480156102f557600080fd5b506101e660008051602061194083398151915281565b34801561031757600080fd5b5061012d6107a8565b34801561032c57600080fd5b506002546102dc906001600160a01b031681565b34801561034c57600080fd5b5061016f61035b36600461134a565b6108fe565b34801561036c57600080fd5b506101e6600081565b34801561038157600080fd5b5061012d610390366004611454565b610929565b3480156103a157600080fd5b5061012d6103b03660046114bb565b610b4d565b3480156103c157600080fd5b506101e66103d036600461151a565b610c40565b3480156103e157600080fd5b50610289610ca5565b3480156103f657600080fd5b5061012d61040536600461134a565b610cd7565b34801561041657600080fd5b506003546102dc906001600160a01b031681565b34801561043657600080fd5b5061012d61044536600461155b565b610cf3565b34801561045657600080fd5b5061046a610465366004611578565b610d8e565b60405161017b9190611619565b6004546001600160a01b031633146104a1576040516282b42960e81b815260040160405180910390fd5b600060148401519050600080600080858060200190518101906104c4919061162c565b93509350935093507ff72a6db8f34c9eb7a15264ceb7ab9e9426e06703f8ab7622d56c1b73dbf0e25189868587868660405161053d9695949392919061ffff96871681526001600160a01b039586166020820152938516604085015260608401929092529092166080820152911660a082015260c00190565b60405180910390a1505050505050505050565b60006001600160e01b03198216637965db0b60e01b148061058157506301ffc9a760e01b6001600160e01b03198316145b92915050565b600480546040516307e0db1760e01b815261ffff8416928101929092526001600160a01b0316906307e0db17906024015b600060405180830381600087803b1580156105d257600080fd5b505af11580156105e6573d6000803e3d6000fd5b5050505050565b600480546040516310ddb13760e01b815261ffff8416928101929092526001600160a01b0316906310ddb137906024016105b8565b6000908152600160208190526040909120015490565b61064182610622565b61064a81610e8e565b61026f8383610e9b565b6001600160a01b03811633146106c95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106d38282610f06565b5050565b600480546040516304b2b47b60e11b81526000926001600160a01b039092169163096568f69161070991309101611440565b602060405180830381865afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190611681565b905090565b60008051602061192083398151915261076781610e8e565b50600092835260066020526040909220805461ffff909316600160a01b026001600160b01b03199093166001600160a01b0390921691909117919091179055565b6003546001600160a01b031633146107f75760405162461bcd60e51b815260206004820152601260248201527127a7262cafa822a72224a723afa7aba722a960711b60448201526064016106c0565b600280546003546001600160a01b031982166001600160a01b039182161790925516610824600082610f06565b61083c60008051602061194083398151915282610f06565b61085460008051602061192083398151915282610f06565b60025461086c906000906001600160a01b0316610e9b565b60025461089190600080516020611940833981519152906001600160a01b0316610e9b565b6002546108b690600080516020611920833981519152906001600160a01b0316610e9b565b6002546040517f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0916108f39184916001600160a01b03169061169e565b60405180910390a150565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60008051602061192083398151915261094181610e8e565b4760000361096257604051636165515360e11b815260040160405180910390fd5b60408051602081018990526001600160a01b0380881692820192909252908716606082015261ffff8416608082015260009060a00160408051808303601f1901815290829052600160f01b6020830152620557306022830181905290925060019160009060420160408051808303601f190181528282526004805460008d815260066020529384205463040a7bb160e41b865292955092936001600160a01b03909316926340a7bb1092610a2b92600160a01b90910461ffff169130918b9188918a91016116b8565b6040805180830381865afa158015610a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b919061170c565b50905080471015610a8f5760405163566b103f60e01b815260040160405180910390fd5b60045460008a81526006602090815260408083205481516001600160601b0319606083901b169381019390935281518084036014018152603484019283905262c5803160e81b9092526001600160a01b039094169363c5803100938693610b0d93600160a01b90930461ffff1692918c913091908b90603801611730565b6000604051808303818588803b158015610b2657600080fd5b505af1158015610b3a573d6000803e3d6000fd5b5050505050505050505050505050505050565b6004805461ffff808616600090815260066020526040908190205490516304b2b47b60e11b81526001600160a01b039093169363cbed8b9c93600160a01b90920490921691849163096568f691610ba691309101611440565b602060405180830381865afa158015610bc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be79190611681565b85856040518563ffffffff1660e01b8152600401610c089493929190611797565b600060405180830381600087803b158015610c2257600080fd5b505af1158015610c36573d6000803e3d6000fd5b5050505050505050565b61ffff82166000908152602081815260408083206001600160a01b038716845282528083208151808301909252805482526001015491810182905290831115610c9c576040516303dd4ee960e61b815260040160405180910390fd5b51949350505050565b60048054604051636d0d3e4d60e11b81526000926001600160a01b039092169163da1a7c9a9161070991309101611440565b610ce082610622565b610ce981610e8e565b61026f8383610f06565b6002546001600160a01b03163314610d3a5760405162461bcd60e51b815260206004820152600a60248201526927a7262cafa7aba722a960b11b60448201526064016106c0565b600380546001600160a01b0319166001600160a01b038381169182179092556002546040517fb150023a879fd806e3599b6ca8ee3b60f0e360ab3846d128d67ebce1a391639a936108f3939216919061169e565b600480546040516304b2b47b60e11b81526060926001600160a01b039092169163f5ecbdbc91839163096568f691610dc891309101611440565b602060405180830381865afa158015610de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e099190611681565b6040516001600160e01b031960e084901b16815261ffff9182166004820152908716602482015230604482015260648101859052608401600060405180830381865afa158015610e5d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e8591908101906117ce565b95945050505050565b610e988133610f6d565b50565b610ea582826108fe565b6106d35760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b610f1082826108fe565b156106d35760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b610f7782826108fe565b6106d357610f8f816001600160a01b03166014610fd1565b610f9a836020610fd1565b604051602001610fab92919061183b565b60408051601f198184030181529082905262461bcd60e51b82526106c091600401611619565b60606000610fe08360026118c0565b610feb9060026118df565b6001600160401b0381111561100257611002611183565b6040519080825280601f01601f19166020018201604052801561102c576020820181803683370190505b509050600360fc1b81600081518110611047576110476118f2565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611076576110766118f2565b60200101906001600160f81b031916908160001a905350600061109a8460026118c0565b6110a59060016118df565b90505b600181111561111d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106110d9576110d96118f2565b1a60f81b8282815181106110ef576110ef6118f2565b60200101906001600160f81b031916908160001a90535060049490941c9361111681611908565b90506110a8565b50831561116c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106c0565b9392505050565b61ffff81168114610e9857600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156111c1576111c1611183565b604052919050565b60006001600160401b038211156111e2576111e2611183565b50601f01601f191660200190565b600082601f83011261120157600080fd5b813561121461120f826111c9565b611199565b81815284602083860101111561122957600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561125c57600080fd5b843561126781611173565b935060208501356001600160401b038082111561128357600080fd5b61128f888389016111f0565b94506040870135915080821682146112a657600080fd5b909250606086013590808211156112bc57600080fd5b506112c9878288016111f0565b91505092959194509250565b6000602082840312156112e757600080fd5b81356001600160e01b03198116811461116c57600080fd5b60006020828403121561131157600080fd5b813561116c81611173565b60006020828403121561132e57600080fd5b5035919050565b6001600160a01b0381168114610e9857600080fd5b6000806040838503121561135d57600080fd5b82359150602083013561136f81611335565b809150509250929050565b60008060006040848603121561138f57600080fd5b833561139a81611173565b925060208401356001600160401b03808211156113b657600080fd5b818601915086601f8301126113ca57600080fd5b8135818111156113d957600080fd5b8760208285010111156113eb57600080fd5b6020830194508093505050509250925092565b60008060006060848603121561141357600080fd5b83359250602084013561142581611335565b9150604084013561143581611173565b809150509250925092565b6001600160a01b0391909116815260200190565b60008060008060008060c0878903121561146d57600080fd5b86359550602087013561147f81611335565b9450604087013561148f81611335565b93506060870135925060808701356114a681611173565b8092505060a087013590509295509295509295565b600080600080608085870312156114d157600080fd5b84356114dc81611173565b935060208501356114ec81611173565b92506040850135915060608501356001600160401b0381111561150e57600080fd5b6112c9878288016111f0565b60008060006060848603121561152f57600080fd5b833561153a81611335565b9250602084013561154a81611173565b929592945050506040919091013590565b60006020828403121561156d57600080fd5b813561116c81611335565b6000806000806080858703121561158e57600080fd5b843561159981611173565b935060208501356115a981611173565b925060408501356115b981611335565b9396929550929360600135925050565b60005b838110156115e45781810151838201526020016115cc565b50506000910152565b600081518084526116058160208601602086016115c9565b601f01601f19169290920160200192915050565b60208152600061116c60208301846115ed565b6000806000806080858703121561164257600080fd5b84519350602085015161165481611335565b604086015190935061166581611335565b606086015190925061167681611173565b939692955090935050565b60006020828403121561169357600080fd5b815161116c81611173565b6001600160a01b0392831681529116602082015260400190565b61ffff861681526001600160a01b038516602082015260a0604082018190526000906116e6908301866115ed565b8415156060840152828103608084015261170081856115ed565b98975050505050505050565b6000806040838503121561171f57600080fd5b505080516020909101519092909150565b61ffff8716815260c06020820152600061174d60c08301886115ed565b828103604084015261175f81886115ed565b6001600160a01b0387811660608601528616608085015283810360a0850152905061178a81856115ed565b9998505050505050505050565b600061ffff8087168352808616602084015250836040830152608060608301526117c460808301846115ed565b9695505050505050565b6000602082840312156117e057600080fd5b81516001600160401b038111156117f657600080fd5b8201601f8101841361180757600080fd5b805161181561120f826111c9565b81815285602083850101111561182a57600080fd5b610e858260208301602086016115c9565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b81526000835161186d8160178501602088016115c9565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161189e8160288401602088016115c9565b01602801949350505050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156118da576118da6118aa565b500290565b80820180821115610581576105816118aa565b634e487b7160e01b600052603260045260246000fd5b600081611917576119176118aa565b50600019019056feaf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02c8b5b16d04624687fcf0d0228f19993c9157c1ed07b41d8d430fd9100eb099fe8a264697066735822122056cf654ce9e11b3efbd3e776fd7379f1c0cb39b2cff756154f653576ad4df15964736f6c63430008100033af290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02c8b5b16d04624687fcf0d0228f19993c9157c1ed07b41d8d430fd9100eb099fe8",
  "deployedBytecode": "0x6080604052600436106101265760003560e01c80621d35671461012f57806301ffc9a71461014f57806307e0db171461018457806310ddb137146101a45780631b2df850146101c4578063248a9ca3146101f45780632f2ff15d1461021457806336568abe1461023457806342d65a8d1461025457806354a5beda146102745780635c9a59b61461029c5780635e280f11146102bc578063724c184c146102e957806379ba50971461030b5780638da5cb5b1461032057806391d1485414610340578063a217fddf14610360578063bc26def514610375578063cbed8b9c14610395578063cc14d020146103b5578063cf5d1471146103d5578063d547741f146103ea578063e30c39781461040a578063f2fde38b1461042a578063f5ecbdbc1461044a57005b3661012d57005b005b34801561013b57600080fd5b5061012d61014a366004611246565b610477565b34801561015b57600080fd5b5061016f61016a3660046112d5565b610550565b60405190151581526020015b60405180910390f35b34801561019057600080fd5b5061012d61019f3660046112ff565b610587565b3480156101b057600080fd5b5061012d6101bf3660046112ff565b6105ed565b3480156101d057600080fd5b506101e660008051602061192083398151915281565b60405190815260200161017b565b34801561020057600080fd5b506101e661020f36600461131c565b610622565b34801561022057600080fd5b5061012d61022f36600461134a565b610638565b34801561024057600080fd5b5061012d61024f36600461134a565b610654565b34801561026057600080fd5b5061012d61026f36600461137a565b505050565b34801561028057600080fd5b506102896106d7565b60405161ffff909116815260200161017b565b3480156102a857600080fd5b5061012d6102b73660046113fe565b61074f565b3480156102c857600080fd5b506004546102dc906001600160a01b031681565b60405161017b9190611440565b3480156102f557600080fd5b506101e660008051602061194083398151915281565b34801561031757600080fd5b5061012d6107a8565b34801561032c57600080fd5b506002546102dc906001600160a01b031681565b34801561034c57600080fd5b5061016f61035b36600461134a565b6108fe565b34801561036c57600080fd5b506101e6600081565b34801561038157600080fd5b5061012d610390366004611454565b610929565b3480156103a157600080fd5b5061012d6103b03660046114bb565b610b4d565b3480156103c157600080fd5b506101e66103d036600461151a565b610c40565b3480156103e157600080fd5b50610289610ca5565b3480156103f657600080fd5b5061012d61040536600461134a565b610cd7565b34801561041657600080fd5b506003546102dc906001600160a01b031681565b34801561043657600080fd5b5061012d61044536600461155b565b610cf3565b34801561045657600080fd5b5061046a610465366004611578565b610d8e565b60405161017b9190611619565b6004546001600160a01b031633146104a1576040516282b42960e81b815260040160405180910390fd5b600060148401519050600080600080858060200190518101906104c4919061162c565b93509350935093507ff72a6db8f34c9eb7a15264ceb7ab9e9426e06703f8ab7622d56c1b73dbf0e25189868587868660405161053d9695949392919061ffff96871681526001600160a01b039586166020820152938516604085015260608401929092529092166080820152911660a082015260c00190565b60405180910390a1505050505050505050565b60006001600160e01b03198216637965db0b60e01b148061058157506301ffc9a760e01b6001600160e01b03198316145b92915050565b600480546040516307e0db1760e01b815261ffff8416928101929092526001600160a01b0316906307e0db17906024015b600060405180830381600087803b1580156105d257600080fd5b505af11580156105e6573d6000803e3d6000fd5b5050505050565b600480546040516310ddb13760e01b815261ffff8416928101929092526001600160a01b0316906310ddb137906024016105b8565b6000908152600160208190526040909120015490565b61064182610622565b61064a81610e8e565b61026f8383610e9b565b6001600160a01b03811633146106c95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106d38282610f06565b5050565b600480546040516304b2b47b60e11b81526000926001600160a01b039092169163096568f69161070991309101611440565b602060405180830381865afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190611681565b905090565b60008051602061192083398151915261076781610e8e565b50600092835260066020526040909220805461ffff909316600160a01b026001600160b01b03199093166001600160a01b0390921691909117919091179055565b6003546001600160a01b031633146107f75760405162461bcd60e51b815260206004820152601260248201527127a7262cafa822a72224a723afa7aba722a960711b60448201526064016106c0565b600280546003546001600160a01b031982166001600160a01b039182161790925516610824600082610f06565b61083c60008051602061194083398151915282610f06565b61085460008051602061192083398151915282610f06565b60025461086c906000906001600160a01b0316610e9b565b60025461089190600080516020611940833981519152906001600160a01b0316610e9b565b6002546108b690600080516020611920833981519152906001600160a01b0316610e9b565b6002546040517f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0916108f39184916001600160a01b03169061169e565b60405180910390a150565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60008051602061192083398151915261094181610e8e565b4760000361096257604051636165515360e11b815260040160405180910390fd5b60408051602081018990526001600160a01b0380881692820192909252908716606082015261ffff8416608082015260009060a00160408051808303601f1901815290829052600160f01b6020830152620557306022830181905290925060019160009060420160408051808303601f190181528282526004805460008d815260066020529384205463040a7bb160e41b865292955092936001600160a01b03909316926340a7bb1092610a2b92600160a01b90910461ffff169130918b9188918a91016116b8565b6040805180830381865afa158015610a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b919061170c565b50905080471015610a8f5760405163566b103f60e01b815260040160405180910390fd5b60045460008a81526006602090815260408083205481516001600160601b0319606083901b169381019390935281518084036014018152603484019283905262c5803160e81b9092526001600160a01b039094169363c5803100938693610b0d93600160a01b90930461ffff1692918c913091908b90603801611730565b6000604051808303818588803b158015610b2657600080fd5b505af1158015610b3a573d6000803e3d6000fd5b5050505050505050505050505050505050565b6004805461ffff808616600090815260066020526040908190205490516304b2b47b60e11b81526001600160a01b039093169363cbed8b9c93600160a01b90920490921691849163096568f691610ba691309101611440565b602060405180830381865afa158015610bc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be79190611681565b85856040518563ffffffff1660e01b8152600401610c089493929190611797565b600060405180830381600087803b158015610c2257600080fd5b505af1158015610c36573d6000803e3d6000fd5b5050505050505050565b61ffff82166000908152602081815260408083206001600160a01b038716845282528083208151808301909252805482526001015491810182905290831115610c9c576040516303dd4ee960e61b815260040160405180910390fd5b51949350505050565b60048054604051636d0d3e4d60e11b81526000926001600160a01b039092169163da1a7c9a9161070991309101611440565b610ce082610622565b610ce981610e8e565b61026f8383610f06565b6002546001600160a01b03163314610d3a5760405162461bcd60e51b815260206004820152600a60248201526927a7262cafa7aba722a960b11b60448201526064016106c0565b600380546001600160a01b0319166001600160a01b038381169182179092556002546040517fb150023a879fd806e3599b6ca8ee3b60f0e360ab3846d128d67ebce1a391639a936108f3939216919061169e565b600480546040516304b2b47b60e11b81526060926001600160a01b039092169163f5ecbdbc91839163096568f691610dc891309101611440565b602060405180830381865afa158015610de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e099190611681565b6040516001600160e01b031960e084901b16815261ffff9182166004820152908716602482015230604482015260648101859052608401600060405180830381865afa158015610e5d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e8591908101906117ce565b95945050505050565b610e988133610f6d565b50565b610ea582826108fe565b6106d35760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b610f1082826108fe565b156106d35760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b610f7782826108fe565b6106d357610f8f816001600160a01b03166014610fd1565b610f9a836020610fd1565b604051602001610fab92919061183b565b60408051601f198184030181529082905262461bcd60e51b82526106c091600401611619565b60606000610fe08360026118c0565b610feb9060026118df565b6001600160401b0381111561100257611002611183565b6040519080825280601f01601f19166020018201604052801561102c576020820181803683370190505b509050600360fc1b81600081518110611047576110476118f2565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611076576110766118f2565b60200101906001600160f81b031916908160001a905350600061109a8460026118c0565b6110a59060016118df565b90505b600181111561111d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106110d9576110d96118f2565b1a60f81b8282815181106110ef576110ef6118f2565b60200101906001600160f81b031916908160001a90535060049490941c9361111681611908565b90506110a8565b50831561116c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106c0565b9392505050565b61ffff81168114610e9857600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156111c1576111c1611183565b604052919050565b60006001600160401b038211156111e2576111e2611183565b50601f01601f191660200190565b600082601f83011261120157600080fd5b813561121461120f826111c9565b611199565b81815284602083860101111561122957600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561125c57600080fd5b843561126781611173565b935060208501356001600160401b038082111561128357600080fd5b61128f888389016111f0565b94506040870135915080821682146112a657600080fd5b909250606086013590808211156112bc57600080fd5b506112c9878288016111f0565b91505092959194509250565b6000602082840312156112e757600080fd5b81356001600160e01b03198116811461116c57600080fd5b60006020828403121561131157600080fd5b813561116c81611173565b60006020828403121561132e57600080fd5b5035919050565b6001600160a01b0381168114610e9857600080fd5b6000806040838503121561135d57600080fd5b82359150602083013561136f81611335565b809150509250929050565b60008060006040848603121561138f57600080fd5b833561139a81611173565b925060208401356001600160401b03808211156113b657600080fd5b818601915086601f8301126113ca57600080fd5b8135818111156113d957600080fd5b8760208285010111156113eb57600080fd5b6020830194508093505050509250925092565b60008060006060848603121561141357600080fd5b83359250602084013561142581611335565b9150604084013561143581611173565b809150509250925092565b6001600160a01b0391909116815260200190565b60008060008060008060c0878903121561146d57600080fd5b86359550602087013561147f81611335565b9450604087013561148f81611335565b93506060870135925060808701356114a681611173565b8092505060a087013590509295509295509295565b600080600080608085870312156114d157600080fd5b84356114dc81611173565b935060208501356114ec81611173565b92506040850135915060608501356001600160401b0381111561150e57600080fd5b6112c9878288016111f0565b60008060006060848603121561152f57600080fd5b833561153a81611335565b9250602084013561154a81611173565b929592945050506040919091013590565b60006020828403121561156d57600080fd5b813561116c81611335565b6000806000806080858703121561158e57600080fd5b843561159981611173565b935060208501356115a981611173565b925060408501356115b981611335565b9396929550929360600135925050565b60005b838110156115e45781810151838201526020016115cc565b50506000910152565b600081518084526116058160208601602086016115c9565b601f01601f19169290920160200192915050565b60208152600061116c60208301846115ed565b6000806000806080858703121561164257600080fd5b84519350602085015161165481611335565b604086015190935061166581611335565b606086015190925061167681611173565b939692955090935050565b60006020828403121561169357600080fd5b815161116c81611173565b6001600160a01b0392831681529116602082015260400190565b61ffff861681526001600160a01b038516602082015260a0604082018190526000906116e6908301866115ed565b8415156060840152828103608084015261170081856115ed565b98975050505050505050565b6000806040838503121561171f57600080fd5b505080516020909101519092909150565b61ffff8716815260c06020820152600061174d60c08301886115ed565b828103604084015261175f81886115ed565b6001600160a01b0387811660608601528616608085015283810360a0850152905061178a81856115ed565b9998505050505050505050565b600061ffff8087168352808616602084015250836040830152608060608301526117c460808301846115ed565b9695505050505050565b6000602082840312156117e057600080fd5b81516001600160401b038111156117f657600080fd5b8201601f8101841361180757600080fd5b805161181561120f826111c9565b81815285602083850101111561182a57600080fd5b610e858260208301602086016115c9565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b81526000835161186d8160178501602088016115c9565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161189e8160288401602088016115c9565b01602801949350505050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156118da576118da6118aa565b500290565b80820180821115610581576105816118aa565b634e487b7160e01b600052603260045260246000fd5b600081611917576119176118aa565b50600019019056feaf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02c8b5b16d04624687fcf0d0228f19993c9157c1ed07b41d8d430fd9100eb099fe8a264697066735822122056cf654ce9e11b3efbd3e776fd7379f1c0cb39b2cff756154f653576ad4df15964736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptOwnership()": {
        "details": "Accept transfer of ownership of the contract. Can only be called by the pendingOwner."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Init transfer of ownership of the contract to a new account (`_pendingOwner`).",
        "params": {
          "_pendingOwner": "pending owner of contract Can only be called by the current owner."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "GUARDIAN()": {
        "notice": "Update vault params, perform time-sensitive operations, set manager"
      },
      "MANAGER()": {
        "notice": "Hot-wallet bots that route funds between vaults, rebalance and harvest strategies"
      },
      "owner()": {
        "notice": "Add and remove vaults and strategies and other critical operations behind timelock Default admin role There should only be one owner, so it is not a role"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 17467,
        "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
        "label": "messageBoard",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint16,t_mapping(t_address,t_struct(Message)17460_storage))"
      },
      {
        "astId": 1634,
        "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
        "label": "_roles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)1629_storage)"
      },
      {
        "astId": 18596,
        "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 18598,
        "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
        "label": "pendingOwner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 16870,
        "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
        "label": "endpoint",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(ILayerZeroEndpoint)19723"
      },
      {
        "astId": 16889,
        "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
        "label": "messages",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(message)16882_storage))"
      },
      {
        "astId": 16894,
        "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
        "label": "chains",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(lzConfig)16875_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ILayerZeroEndpoint)19723": {
        "encoding": "inplace",
        "label": "contract ILayerZeroEndpoint",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(Message)17460_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct XAdapter.Message)",
        "numberOfBytes": "32",
        "value": "t_struct(Message)17460_storage"
      },
      "t_mapping(t_address,t_struct(message)16882_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct LayerZeroAdapter.message)",
        "numberOfBytes": "32",
        "value": "t_struct(message)16882_storage"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)1629_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)1629_storage"
      },
      "t_mapping(t_uint16,t_mapping(t_address,t_struct(Message)17460_storage))": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => mapping(address => struct XAdapter.Message))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Message)17460_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_struct(message)16882_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => struct LayerZeroAdapter.message))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(message)16882_storage)"
      },
      "t_mapping(t_uint256,t_struct(lzConfig)16875_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct LayerZeroAdapter.lzConfig)",
        "numberOfBytes": "32",
        "value": "t_struct(lzConfig)16875_storage"
      },
      "t_struct(Message)17460_storage": {
        "encoding": "inplace",
        "label": "struct XAdapter.Message",
        "members": [
          {
            "astId": 17457,
            "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
            "label": "value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 17459,
            "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(RoleData)1629_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 1626,
            "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 1628,
            "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(lzConfig)16875_storage": {
        "encoding": "inplace",
        "label": "struct LayerZeroAdapter.lzConfig",
        "members": [
          {
            "astId": 16872,
            "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
            "label": "adapter",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 16874,
            "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
            "label": "lzChainId",
            "offset": 20,
            "slot": "0",
            "type": "t_uint16"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(message)16882_storage": {
        "encoding": "inplace",
        "label": "struct LayerZeroAdapter.message",
        "members": [
          {
            "astId": 16877,
            "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
            "label": "deposits",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 16879,
            "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
            "label": "withdrawals",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 16881,
            "contract": "src/adapters/LayerZeroAdapter.sol:LayerZeroAdapter",
            "label": "redeemed",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}